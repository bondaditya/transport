# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-10-04 09:43
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=120, null=True)),
                ('email_id', models.EmailField(max_length=240)),
                ('phone_number', models.CharField(max_length=15)),
                ('department', models.CharField(blank=True, max_length=120, null=True)),
                ('approver_id', models.CharField(blank=True, max_length=120, null=True)),
                ('budget_center', models.CharField(blank=True, max_length=120, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('head_email', models.EmailField(max_length=254)),
                ('head_name', models.CharField(max_length=120)),
                ('vehicle_type', models.CharField(choices=[('x', 'x'), ('y', 'y')], default='Car', max_length=120)),
                ('booking_type', models.CharField(choices=[('x', 'x'), ('y', 'y')], default='Unapproved', max_length=120)),
                ('pickup_address', models.TextField()),
                ('pickup_time', models.CharField(choices=[('0', '1:00'), ('1', '2:00'), ('2', '3:00'), ('3', '4:00'), ('4', '5:00'), ('5', '6:00'), ('6', '7:00'), ('7', '8:00'), ('8', '9:00'), ('9', '10:00'), ('10', '11:00'), ('11', '12:00')], default='0', max_length=120)),
                ('am_pm', models.CharField(choices=[('am', 'am'), ('am', 'am')], default='Car', max_length=120)),
                ('pickup_date', models.DateField()),
                ('contact', models.IntegerField()),
                ('approval_name', models.CharField(max_length=120)),
                ('approval_email', models.EmailField(max_length=254)),
                ('approval_status', models.CharField(choices=[('approved', 'approved'), ('unapproved', 'unapproved'), ('rejected', 'rejected')], default='Unapproved', max_length=120)),
                ('note_user', models.TextField()),
                ('note_admin', models.TextField()),
                ('assigned_to', models.CharField(choices=[('approved', 'approved'), ('unapproved', 'unapproved'), ('rejected', 'rejected')], default='XYZ', max_length=120)),
                ('driver_name', models.CharField(choices=[('approved', 'approved'), ('unapproved', 'unapproved'), ('rejected', 'rejected')], default='XYZ', max_length=120)),
                ('driver_contact', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_model_name', models.CharField(default='Maruti', max_length=120)),
                ('car_number', models.CharField(default='HR-XYZ-78', max_length=120)),
                ('remarks', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(default='Ram', max_length=120)),
                ('driver_contact', models.IntegerField()),
                ('remarks', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tarrif', models.IntegerField()),
                ('total_km', models.IntegerField()),
                ('night_option', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=120)),
                ('night_charges', models.IntegerField()),
                ('toll_cost', models.IntegerField()),
                ('total', models.IntegerField()),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='form.Booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='car',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='form.Car'),
        ),
        migrations.AddField(
            model_name='booking',
            name='driver',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='form.Driver'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
